name: Continuous Integration & Deployment
on: [push]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  api-test:
    name: "API 📡 - test 🧪"
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
      TEST_DATABASE_URL: mysql2://root:dolos@127.0.0.1:3306/dolos_test
    services:
      mysql:
        image: mariadb
        env:
          MARIADB_ROOT_PASSWORD: dolos
          MARIADB_DATABASE: dolos_test
          MARIADB_HOST: localhost
          MARIADB_MYSQL_LOCALHOST_USER: 1
          MARIADB_MYSQL_LOCALHOST_GRANTS: USAGE
        ports:
          - 3306:3306
        options: --health-cmd="healthcheck.sh --su-mysql --connect --innodb_initialized" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
      - name: Setup Ruby 📚
        uses: ruby/setup-ruby@v1
        with:
          working-directory: api/
          bundler-cache: true
      - name: Run tests 🧪
        run: |
          cd api/
          docker pull ghcr.io/dodona-edu/dolos:latest
          bundle exec rails db:prepare
          bundle exec rails test

  api-lint:
    name: "API 📡 - lint 📏"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
      - name: Setup Ruby 📚
        uses: ruby/setup-ruby@v1
        with:
          working-directory: api/
          bundler-cache: true
      - name: Run rubocop 📏
        run: |
          cd api/
          bundle exec rubocop

  install-deps:
    name: Install (Node ${{ matrix.node }}) ⚡️
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ "16", "18", "20" ]
      fail-fast: false
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Cache Yarn dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/*/node_modules
          key: ${{ runner.os }}-node-${{ matrix.node }}-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/package.json') }}

      - name: Setup Node 📚
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Yarn install ⚡️
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: yarn install

  cli-build:
    name: "CLI 💻️ - build 🔧"
    runs-on: ubuntu-latest
    needs: install-deps
    strategy:
      matrix:
        node:  [ "16", "18", "20" ]
      fail-fast: false
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Node 📚
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Fetch Dependencies ⚡️
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/*/node_modules
          key: ${{ runner.os }}-node-${{ matrix.node }}-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/package.json') }}

      - name: Check if cache was hit 🔎
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          echo "Should have hit cache"
          false

      - name: Build 🔧
        run: |
          cd cli/
          yarn build --force

  cli-lint:
    name: "CLI 💻️ - lint 📏"
    runs-on: ubuntu-latest
    needs: install-deps
    strategy:
      matrix:
        node: [ "20" ]
      fail-fast: false
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Node 📚
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Fetch Dependencies ⚡️
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/*/node_modules
          key: ${{ runner.os }}-node-${{ matrix.node }}-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/package.json') }}

      - name: Check if cache was hit 🔎
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          echo "Should have hit cache"
          false

      - name: Lint 📏
        run: |
          cd cli/
          yarn lint

  core-build-test:
    name: "Core ❤️ - build & test 🔧"
    runs-on: ubuntu-latest
    needs: install-deps
    strategy:
      matrix:
        node: [ "16", "18", "20" ]
      fail-fast: false
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Node 📚
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Fetch Dependencies ⚡️
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/*/node_modules
          key: ${{ runner.os }}-node-${{ matrix.node }}-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/package.json') }}

      - name: Check if cache was hit 🔎
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          echo "Should have hit cache"
          false

      - name: Build & test 🔧
        run: |
          cd core/
          yarn build
          yarn test -v --serial

  core-lint:
    name: "Core ❤️ - lint 📏"
    runs-on: ubuntu-latest
    needs: install-deps
    strategy:
      matrix:
        node: [ "20" ]
      fail-fast: false
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Node 📚
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Fetch Dependencies ⚡️
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/*/node_modules
          key: ${{ runner.os }}-node-${{ matrix.node }}-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/package.json') }}

      - name: Check if cache was hit 🔎
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          echo "Should have hit cache"
          false

      - name: Lint 📏
        run: |
          cd core/
          yarn lint

  lib-build-test:
    name: "Lib 📚 - build & test 🔧"
    runs-on: ubuntu-latest
    needs: install-deps
    strategy:
      matrix:
        node: [ "16", "18", "20" ]
      fail-fast: false
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Node 📚
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Fetch Dependencies ⚡️
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/*/node_modules
          key: ${{ runner.os }}-node-${{ matrix.node }}-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/package.json') }}

      - name: Check if cache was hit 🔎
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          echo "Should have hit cache"
          false

      - name: Build & test 🔧
        run: |
          cd lib/
          yarn build
          yarn test -v --serial

  lib-lint:
    name: "Lib 📚 - lint 📏"
    runs-on: ubuntu-latest
    needs: install-deps
    strategy:
      matrix:
        node: [ "20" ]
      fail-fast: false
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Node 📚
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Fetch Dependencies ⚡️
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/*/node_modules
          key: ${{ runner.os }}-node-${{ matrix.node }}-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/package.json') }}

      - name: Check if cache was hit 🔎
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          echo "Should have hit cache"
          false

      - name: Lint 📏
        run: |
          cd lib/
          yarn lint

  web-lint:
    name: "Web 🌐 - lint 📏"
    runs-on: ubuntu-latest
    needs: install-deps
    strategy:
      matrix:
        node: [ "20" ]
      fail-fast: false
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Node 📚
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Fetch Dependencies ⚡️
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/*/node_modules
          key: ${{ runner.os }}-node-${{ matrix.node }}-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/package.json') }}

      - name: Check if cache was hit 🔎
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          echo "Should have hit cache"
          false

      - name: Lint 📏
        run: |
          cd web/
          yarn lint

  build-docker:
    name: "Build docker"
    runs-on: ubuntu-latest
    needs: install-deps
    strategy:
      matrix:
        node:  [ "20" ]
      fail-fast: false
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Node 📚
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Fetch Dependencies ⚡️
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/*/node_modules
          key: ${{ runner.os }}-node-${{ matrix.node }}-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/package.json') }}

      - name: Check if cache was hit 🔎
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          echo "Should have hit cache"
          false

      - name: Build core 🔧
        run: |
          cd core/
          yarn build

      - name: Build lib 🔧
        run: |
          cd lib/
          yarn build --force

      - name: Build web 🔧
        run: |
          cd web/
          yarn build

      - name: Build CLI 🔧
        run: |
          cd cli/
          yarn build --force

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.ECR_UPLOADER_KEY }}
          aws-secret-access-key: ${{ secrets.ECR_UPLOADER_SECRET }}
          aws-region: us-east-1

      - name: Get Current Branch
        id: get-branch
        uses: codio/get-branch-name-github-action@v1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: app Docker build
        run: docker build -t tmp_app_img --file ./docker-codio/Dockerfile .

      - name: push app image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: codio/dolos
          IMAGE_TAG: ${{ github.sha }}
          BRANCH: ${{ steps.get-branch.outputs.branch }}
        run: |
          docker tag tmp_app_img $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag tmp_app_img $ECR_REGISTRY/$ECR_REPOSITORY:$BRANCH
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$BRANCH

      - name: push app dev version
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: codio/dolos
        run: |
          docker tag tmp_app_img $ECR_REGISTRY/$ECR_REPOSITORY:dev
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:dev
        if: ${{ steps.get-branch.outputs.branch == 'master' }}

      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}

      - name: Slack
        uses: codio/codio-slack-action@master
        with:
          slack_hook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          message: "<https://github.com/${{ github.repository }}/actions/runs/${{github.run_id}}|${{ github.workflow }} build-push> for ${{ github.repository }} by ${{ github.actor }} has ${{ job.status }} on branch ${{ github.ref }}"
          success: ${{ job.status }}
        if: always()
